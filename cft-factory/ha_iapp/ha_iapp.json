{
    "Parameters": {
        "pBigIPInterface": {
            "Description": "Tier 1 BIG-IP interface for HA",
            "Type": "String"
        },
        "pBigIPMgmt": {
            "Description": "Active BIG-IP Management IP address",
            "Type": "String"
        },
        "pBigIPRouteTableId": {
            "Description": "BIG-IP route table id for HA",
            "Type": "String"
        },
        "pBigIPS3Bucket": {
            "Description": "BIG-IP S3 bucket where password is stored",
            "Type": "String"
        },
        "pLambdaS3BucketName": {
            "Description": "S3 bucket where lambda code is stored",
            "Type": "String"
        },
        "pLambdaS3KeyPrefix": {
            "Description": "S3 Key Prefix where lambda code is stored",
            "Type": "String"
        },
        "piAppUrl": {
            "Default": "https://raw.githubusercontent.com/F5Networks/f5-aws-cloudformation/v3.1.0/iApps/f5.aws_advanced_ha.v1.4.0rc3.tmpl",
            "Description": "URL to download the BIG-IP AWS HA iApp",
            "Type": "String"
        }
    },
    "Resources": {
        "CustomLambdaExec": {
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "HAiApp",
                        "Arn"
                    ]
                },
                "iapp_url": {
                    "Ref": "piAppUrl"
                },
                "interface": {
                    "Ref": "pBigIPInterface"
                },
                "mgmt_ip": {
                    "Ref": "pBigIPMgmt"
                },
                "route_table_id": {
                    "Ref": "pBigIPRouteTableId"
                },
                "s3_bucket": {
                    "Ref": "pBigIPS3Bucket"
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "HAiApp": {
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "pLambdaS3BucketName"
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "pLambdaS3KeyPrefix"
                                },
                                "/ha_iapp.zip"
                            ]
                        ]
                    }
                },
                "Handler": "index.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": 30
            },
            "Type": "AWS::Lambda::Function"
        },
        "LambdaRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        }
    }
}