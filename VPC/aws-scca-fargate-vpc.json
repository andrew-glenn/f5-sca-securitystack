{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "pStackName": {
            "Type": "String",
            "Default": "production",
            "Description": "The name of the parent Fargate networking stack that you created. Necessary to locate and reference resources created by that stack."
        },
        "pProject": {
            "Type": "String",
            "Default": "SCCA-App-Demo",
            "Description": "Project name to use for tagging"
        },    
        "pFargateVpcCidr": {
            "Type": "String",
            "Default": "10.2.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": "CIDR Block for the app VPC",
            "MaxLength": 18,
            "MinLength": 9
        },
        "pVpcStackName" : {
            "Description" : "Name of the Stack that deployed the VPC",
            "Type": "String",
            "Default": "VDSS"
       },
        "pServiceName": {
            "Type": "String",
            "Default": "nginx",
            "Description": "A name for the service"
        },
        "pImageUrl": {
            "Type": "String",
            "Default": "nginx",
            "Description": "The url of a docker image that contains the application process that will handle the traffic for this service"
        },
        "pContainerPort": {
            "Type": "Number",
            "Default": 80,
            "Description": "What port number the application inside the docker container is binding to"
        },
        "pContainerCpu": {
            "Type": "Number",
            "Default": 256,
            "Description": "How much CPU to give the container. 1024 is 1 CPU"
        },
        "pContainerMemory": {
            "Type": "Number",
            "Default": 512,
            "Description": "How much memory in megabytes to give the container"
        },
        "pDesiredCount": {
            "Type": "Number",
            "Default": 2,
            "Description": "How many copies of the service task to run"
        }
    },
    "Mappings":{
        "AWSRegionToAMI":{
          "us-east-1":{
            "AMIID":"ami-eca289fb"
          },
          "us-east-2":{
            "AMIID":"ami-446f3521"
          },
          "us-west-1":{
            "AMIID":"ami-9fadf8ff"
          },
          "us-west-2":{
            "AMIID":"ami-7abc111a"
          },
          "eu-west-1":{
            "AMIID":"ami-a1491ad2"
          },
          "eu-central-1":{
            "AMIID":"ami-54f5303b"
          },
          "ap-northeast-1":{
            "AMIID":"ami-9cd57ffd"
          },
          "ap-southeast-1":{
            "AMIID":"ami-a900a3ca"
          },
          "ap-southeast-2":{
            "AMIID":"ami-5781be34"
          }
        }
    },
    "Resources": {
        "rFargateVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "pFargateVpcCidr"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-vpc"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rFargateVpc"
            }
        },
        "rFargateMainRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "rFargateVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-main-rt"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rFargateMainRouteTable"
            }
        },
        "rFargateSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "pFargateVpcCidr"
                                },
                                16,
                                "8"
                            ]
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "rFargateVpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-subnetA"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rFargateSubnetA"
            }
        },
        "rFargateSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rFargateMainRouteTable"
                },
                "SubnetId": {
                    "Ref": "rFargateSubnetA"
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rFargateMainRouteTableAssociation"
            }
        },
        "rFargateSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "pFargateVpcCidr"
                                },
                                16,
                                "8"
                            ]
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "rFargateVpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-subnet-b"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaAppStack/rFargateSubnetB"
            }
        },
        "rFargateSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rFargateMainRouteTable"
                },
                "SubnetId": {
                    "Ref": "rFargateSubnetB"
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rAppMainRouteTableAssociation"
            }
        },
        "rFargateSubnetPeer": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "pFargateVpcCidr"
                                },
                                16,
                                "8"
                            ]
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "rFargateVpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-subnet-peer"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rFargateSubnetPeer"
            }
        },
        "rFargateSubnetPeerRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rFargateMainRouteTable"
                },
                "SubnetId": {
                    "Ref": "rFargateSubnetPeer"
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rAppMainRouteTableAssociation"
            }
        },
        "rFargateTransitGatewayAttachement": {
            "Type": "AWS::EC2::TransitGatewayAttachment",
            "Properties": {
                "SubnetIds": [
                    {
                        "Ref": "rFargateSubnetPeer"
                    }
                ],
                "TransitGatewayId": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "pTransitGatewayStackName"
                                },
                                "-SccaTgwId"
                            ]
                        ]
                    }
                },
                "VpcId": {
                    "Ref": "rFargateVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fargate-tgw-attachment"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "pProject"
                        }
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rTransitGatewayAttachement"
            }
        },
        "rFargateTransitGatewayRouteTableAssociation": {
            "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
            "Properties": {
                "TransitGatewayAttachmentId": {
                    "Ref": "rFargateTransitGatewayAttachement"
                },
                "TransitGatewayRouteTableId": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "pTransitGatewayStackName"
                                },
                                "-SccaMainTgwRouteTableId"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rTransitGatewayRouteTableAssociation"
            }
        },
        "rFargateTransitGatewayRouteTablePropagation": {
            "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
            "Properties": {
                "TransitGatewayAttachmentId": {
                    "Ref": "rFargateTransitGatewayAttachement"
                },
                "TransitGatewayRouteTableId": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "pTransitGatewayStackName"
                                },
                                "-SccaMainTgwRouteTableId"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rTransitGatewayRouteTablePropagation"
            }
        },
        "rMainTransitGatewayRouteApp": {
            "Type": "AWS::EC2::TransitGatewayRoute",
            "Properties": {
                "TransitGatewayRouteTableId": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "pTransitGatewayStackName"
                                },
                                "-SccaMainTgwRouteTableId"
                            ]
                        ]
                    }
                },
                "DestinationCidrBlock": {
                    "Ref": "pFargateVpcCidr"
                },
                "TransitGatewayAttachmentId": {
                    "Ref": "rFargateTransitGatewayAttachement"
                }
            },
            "Metadata": {
                "aws:cdk:path": "SccaFargateStack/rMainTransitGatewayRouteVdss"
            }
        },
        "rFargateDefaultRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "rFargateTransitGatewayAttachement",
            "Properties" : {
              "RouteTableId" : { "Ref" : "rFargateMainRouteTable" },
              "DestinationCidrBlock" : "0.0.0.0/0",
              "TransitGatewayId": {
               "Fn::ImportValue": {
                   "Fn::Join": [
                     "",
                     [
                         {
                             "Ref": "pTransitGatewayStackName"
                         },
                         "-SccaTgwId"
                     ]
                   ]
                 }
            }
        }
        },
        "rFargateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "VpcId": {
                "Ref": "rFargateVpc"
              },
              "GroupDescription": "Enable SSH access via port 22 and enable access to web on 80 and 443",
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": "22",
                  "ToPort": "22",
                  "CidrIp": "10.0.0.0/8"
                },
                {
                  "IpProtocol": "tcp",
                  "FromPort": "80",
                  "ToPort": "80",
                  "CidrIp": "10.0.0.0/8"
                },
                {
                  "IpProtocol": "tcp",
                  "FromPort": "443",
                  "ToPort": "443",
                  "CidrIp": "10.0.0.0/8"
                }
              ]
            }
        },
        "rFargateEcsCluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "rCloudwatchLogsGroup":{
            "Type":"AWS::Logs::LogGroup",
            "Properties":{
              "LogGroupName":{
                "Fn::Join":[
                  "-",
                  [
                    "ECSLogGroup",
                    {
                      "Ref":"AWS::StackName"
                    }
                  ]
                ]
              },
              "RetentionInDays":14
            }
        },
        "rFargateECSServiceRole":{
            "Type":"AWS::IAM::Role",
            "Properties":{
              "AssumeRolePolicyDocument":{
                "Statement":[
                  {
                    "Effect":"Allow",
                    "Principal":{
                      "Service":[
                        "ecs.amazonaws.com"
                      ]
                    },
                    "Action":[
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Path":"/",
              "Policies":[
                {
                  "PolicyName":"ecs-service",
                  "PolicyDocument":{
                    "Statement":[
                      {
                        "Effect":"Allow",
                        "Action":[
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:Describe*",
                            "ec2:DetachNetworkInterface"
                        ],
                        "Resource":"*"
                      }
                    ]
                  }
                }
              ]
            }
        },
        "rFargateECSTaskRole":{
            "Type":"AWS::IAM::Role",
            "Properties":{
              "AssumeRolePolicyDocument":{
                "Statement":[
                  {
                    "Effect":"Allow",
                    "Principal":{
                      "Service":[
                        "ecs.amazonaws.com"
                      ]
                    },
                    "Action":[
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Path":"/",
              "Policies":[
                {
                  "PolicyName":"ecs-service",
                  "PolicyDocument":{
                    "Statement":[
                      {
                        "Effect":"Allow",
                        "Action":[
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:BatchGetImage",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"

                        ],
                        "Resource":"*"
                      }
                    ]
                  }
                }
              ]
            }
        },            
        "rTaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Family": {
                    "Ref": "pServiceName"
                },
                "Cpu": {
                    "Ref": "pContainerCpu"
                },
                "Memory": {
                    "Ref": "pContainerMemory"
                },
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ],
                "ExecutionRoleArn": {
                   "Ref": "rFargateECSServiceRole"
                },
                "TaskRoleArn": {
                   "Ref" : "rFargateECSTaskRole"
                },
                "ContainerDefinitions": [
                    {
                        "Name": {
                            "Ref": "pServiceName"
                        },
                        "Cpu": {
                            "Ref": "pContainerCpu"
                        },
                        "Memory": {
                            "Ref": "pContainerMemory"
                        },
                        "Image": {
                            "Ref": "pImageUrl"
                        },
                        "PortMappings": [
                            {
                                "ContainerPort": {
                                    "Ref": "pContainerPort"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "rService": {
            "Type": "AWS::ECS::Service",
            "Properties": {
                "ServiceName": {
                    "Ref": "pServiceName"
                },
                "Cluster": { "Ref" : "rFargateEcsCluster"
                },
                "LaunchType": "FARGATE",
                "DeploymentConfiguration": {
                    "MaximumPercent": 200,
                    "MinimumHealthyPercent": 75
                },
                "DesiredCount": {
                    "Ref": "pDesiredCount"
                },
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "DISABLED",
                        "SecurityGroups": [
                          { "Ref" : "rFargateSecurityGroup" }
                        ],
                        "Subnets": [ {"Ref": "rFargateSubnetA"}, {"Ref" : "rFargateSubnetB"}
                        ]
                    }
                },
                "TaskDefinition": {
                    "Ref": "rTaskDefinition"
                }
            }
        },
        "rServiceDiscoveryPrivateDnsNameSpace": {
            "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
            "Properties": {
                "Vpc" : {
                   "Fn::ImportValue": { "Fn::Sub": "${pVpcStackName}-VdssVpcId" }
            },
            "Name" : "sca.example.com"
           }
        },
        "rServiceDiscoverService": {
            "Type": "AWS::ServiceDiscovery::Service",
            "Properties": {
                "Description" : "Example Service Disovery NameSpace",
                "Name" : "www",
                "DnsConfig" : {
                    "DnsRecords" : {
                        "TTL" : 60,
                        "Type" : "A"
                    },
                    "RoutingPolicy" : "MULTIVALUE"
                },
                "NamespaceId" : {"Ref" : "rServiceDiscoveryPrivateDnsNameSpace"}
            }
        }
    },
    "Outputs": {
        "StackName": {
            "Value": {
                "Ref": "AWS::StackName"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-StackName"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetPeerIpRange": {
            "Value": {
                "Fn::Select": [
                    4,
                    {
                        "Fn::Cidr": [
                            {
                                "Ref": "pFargateVpcCidr"
                            },
                            16,
                            "8"
                        ]
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-PeerSubnetIpRange"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetAIpRange": {
            "Value": {
                "Fn::Select": [
                    0,
                    {
                        "Fn::Cidr": [
                            {
                                "Ref": "pFargateVpcCidr"
                            },
                            16,
                            "8"
                        ]
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-SubnetAIpRange"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetBIpRange": {
            "Value": {
                "Fn::Select": [
                    2,
                    {
                        "Fn::Cidr": [
                            {
                                "Ref": "pFargateVpcCidr"
                            },
                            16,
                            "8"
                        ]
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-Dmz2SubnetIpRange"
                        ]
                    ]
                }
            }
        },
        "FargateVpcId": {
            "Value": {
                "Ref": "rFargateVpc"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-FargateVpcId"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetPeertId": {
            "Value": {
                "Ref": "rFargateSubnetPeer"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-FargatePeerSubnetID"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetAtId": {
            "Value": {
                "Ref": "rFargateSubnetA"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-FargateSubnetAID"
                        ]
                    ]
                }
            }
        },
        "FargateSubnetBtId": {
            "Value": {
                "Ref": "rFargateSubnetB"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-FargateSubnetBId"
                        ]
                    ]
                }
            }
        },
        "FargateMainRouteTable": {
            "Value": {
                "Ref": "rFargateMainRouteTable"
            },
            "Export": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-FargateMainRouteTable"
                        ]
                    ]
                }
            }
        }
    }
}
