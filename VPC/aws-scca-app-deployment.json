{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys all components to support the application, with the exception of those related to BIG-IP.  An autoscaling group for the application is created, but we leave the creation of CloudWatch alarms and scaling policies as an exercise for the future. Disclaimer: More realistic application template would take AMI ID as input, with AMI ID being be artifact of a build pipe line.",
  "Parameters": {
    "pDeploymentName" : {
      "Description" : "Name the template uses to create object names",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "example"
    },
    "pApplication" : {
      "Description" : "Service Name Short- used for creating objects. ex. service1",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "f5demoapp"
    },
    "pProject": {
        "Type": "String",
        "Default": "SCCA-App-Demo",
        "Description": "Project name to use for tagging"
    },
    "pContainerName" : {
      "Description" : "Container Name",
      "Type" : "String",
      "Default": "f5devcentral/f5-demo-app:latest"
    }
  },
  "Mappings": {
    "imageRegionMap": {
      "ap-northeast-1":{
        "AMI":"ami-0a84a504d6d5ad732"
      },
      "ap-northeast-2":{
        "AMI":"ami-0f7b7753aba0b7a5d"
      },
      "ap-south-1":{
        "AMI":"ami-0ce2a01ec1fe31129"
      },
      "ap-southeast-1":{
        "AMI":"ami-042a84288996ec3c1"
      },
      "ap-southeast-2":{
        "AMI":"ami-0118debc71f4a5be3"
      },
      "ca-central-1":{
        "AMI":"ami-0179543623c8e6647"
      },
      "eu-central-1":{
        "AMI":"ami-0dffee650f80cbced"
      },
      "eu-west-1":{
        "AMI":"ami-06f42fd8c0931ce4b"
      },
      "eu-west-2":{
        "AMI":"ami-09b984525e8ba2206"
      },
      "eu-west-3":{
        "AMI":"ami-0b12754d476af8dbb"
      },
      "sa-east-1":{
        "AMI":"ami-0f921f57ccbc209c2"
      },
      "us-east-1":{
        "AMI":"ami-05fb04e2687120d6b"
      },
      "us-east-2":{
        "AMI":"ami-087868e91f1a665d1"
      },
      "us-west-1":{
        "AMI":"ami-0ec3e3a838330c61f"
      },
      "us-west-2":{
        "AMI":"ami-09eb876a926ae86db"
      }
    }
  },
  "Resources": {
    "rAppSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
        "Fn::ImportValue": {
        "Fn::Join": [
            "",
            [
                {
                    "Ref": "AWS::StackName"
                },
                "-AppVpcId"
            ]
         ]
        }
       },
        "GroupDescription": "Enable SSH access via port 22 and enable access to web on 80 and 443",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "10.0.0.0/8"
          }
        ],
        "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "pDeploymentName"
                    },
                    "-",
                    {
                      "Ref": "pApplication"
                    },
                    " app security group"
                  ]
                ]
              }
            },
            {
              "Key": "Application",
              "Value": {
                "Ref": "application"
              }
            }
        ]
      }
    },
    "rAppLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "imageRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": "t2.small",
        "AssociatePublicIpAddress": false,
        "SecurityGroups": [
          {
            "Ref": "rAppSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "### Xenial 16.04\n",
                "# Install Docker\n",
                "sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \n",
                "sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n",
                "sudo apt-get update\n",
                "sudo apt-get install -y docker-ce\n",
                "# Deploy App\n",
                "sudo docker run --name f5demo -p 80:80 -p 443:443 -d ",
                {
                  "Ref": "containerName"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "rAppAutoscaleGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "App Autoscale Instance: ",
                  {
                    "Ref": "pDeploymentName"
                  },
                  "-",
                  {
                    "Ref": "pApplication"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true
          },        
          {
            "Key": "APPNAME",
            "Value": "LINUXSERVER",
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": {
          "Fn::ImportValue": {
          "Fn::Join": [
            "",
            [
                {
                    "Ref": "AWS::StackName"
                },
                "-AppSubnetAID"
            ]
          ]
        } 
      },
      "Cooldown": "600",
      "HealthCheckGracePeriod": 120,
      "LaunchConfigurationName": {
        "Ref": "appLaunchConfig"
        },
      "MaxSize": "3",
      "MinSize": "1",
      "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
         "MaxBatchSize": "1",
         "MinInstancesInService": "1",
         "PauseTime": "PT3M"
        }
      }
    }
  }    
}
